如果另一个进程持有不兼容的锁，对flock（）的调用可能会被阻止。要发出非阻塞请求，请在上述任何操作中包含LOCK_NB（通过ORing）。



单个文件不能同时具有共享锁和独占锁。



flock（）创建的锁与打开的文件描述相关联（请参见open（2））。这意味着重复的文件描述符（例如，由fork（2）或dup（2）创建）引用同一个锁，并且可以使用这些文件描述符中的任何一个来修改或释放该锁。此外，可以通过对这些重复的文件描述符中的任何一个进行显式锁定操作，或者在所有这些文件描述符都已关闭时释放锁定。



如果进程使用open（2）（或类似）为同一个文件获取多个文件描述符，flock（）将独立处理这些文件描述符。使用这些文件描述符之一锁定文件的尝试可能会被调用进程已经通过另一个文件描述符设置的锁拒绝。



一个进程对一个文件只能持有一种类型的锁（共享或独占）。对已锁定文件的后续flock（）调用将现有锁转换为新的锁模式。



flock（）创建的锁在execve（2）中保留。



无论文件以何种模式打开，都可以在文件上放置共享锁或独占锁。


