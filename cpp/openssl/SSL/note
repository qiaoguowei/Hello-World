
    SSL_CTX *SSL_CTX_new(const SSL_METHOD *method);

    const SSL_METHOD *SSLv23_method(void);
    const SSL_METHOD *SSLv23_server_method(void);
    const SSL_METHOD *SSLv23_client_method(void);
    const SSL_METHOD *TLSv1_2_method(void);
    const SSL_METHOD *TLSv1_2_server_method(void);
    const SSL_METHOD *TLSv1_2_client_method(void);
    const SSL_METHOD *TLSv1_1_method(void);
    const SSL_METHOD *TLSv1_1_server_method(void);
    const SSL_METHOD *TLSv1_1_client_method(void);
    const SSL_METHOD *TLSv1_method(void);
    const SSL_METHOD *TLSv1_server_method(void);
    const SSL_METHOD *TLSv1_client_method(void);
    #ifndef OPENSSL_NO_SSL3_METHOD
    const SSL_METHOD *SSLv3_method(void);
    const SSL_METHOD *SSLv3_server_method(void);
    const SSL_METHOD *SSLv3_client_method(void);
    #endif
    #ifndef OPENSSL_NO_SSL2
    const SSL_METHOD *SSLv2_method(void);
    const SSL_METHOD *SSLv2_server_method(void);
    const SSL_METHOD *SSLv2_client_method(void);
    #endif

    const SSL_METHOD *DTLS_method(void);
    const SSL_METHOD *DTLS_server_method(void);
    const SSL_METHOD *DTLS_client_method(void);
    const SSL_METHOD *DTLSv1_2_method(void);
    const SSL_METHOD *DTLSv1_2_server_method(void);
    const SSL_METHOD *DTLSv1_2_client_method(void);
    const SSL_METHOD *DTLSv1_method(void);
    const SSL_METHOD *DTLSv1_server_method(void);
    const SSL_METHOD *DTLSv1_client_method(void);

DESCRIPTION:
    SSL_CTX_new()创建一个新的SSL_CTX对象作为框架来建立启用TLS/SSL的连接。
